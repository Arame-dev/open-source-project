name: Build-Push workflow

on: push

permissions:
  id-token: write
  contents: read

jobs:
    build-scaning-pushing:
      runs-on: ubuntu-latest

      steps:
        - name: Checkout repository
          uses: actions/checkout@v3

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3

        - name: Build docker-client
          run: |
            docker build -f client/Dockerfile.dev -t clientserver.azurecr.io/client:latest ./client

        - name: Build docker-nginx
          run: |
            docker build -f nginx/Dockerfile.dev -t clientserver.azurecr.io/nginx:latest ./nginx

        - name: Build docker-server
          run: |
            docker build -f server/Dockerfile.dev -t clientserver.azurecr.io/server:latest ./server
        
        - name: Run Trivy vulnerability scanner1
          uses: aquasecurity/trivy-action@0.28.0
          with:
              image-ref: clientserver.azurecr.io/client:latest
              format: 'table'
              exit-code: '1'
              ignore-unfixed: true
          continue-on-error: true

        - name: Run Trivy vulnerability scanner2
          uses: aquasecurity/trivy-action@0.28.0
          with:
              image-ref: clientserver.azurecr.io/nginx:latest
              format: 'table'
              exit-code: '1'
              ignore-unfixed: true
          continue-on-error: true
        
        - name: Run Trivy vulnerability scanner3
          uses: aquasecurity/trivy-action@0.28.0
          with:
              image-ref: clientserver.azurecr.io/server:latest
              format: 'table'
              exit-code: '1'
              ignore-unfixed: true
          continue-on-error: true

        - name: Login azure
          uses: azure/login@v2
          with:
              client-id: ${{ secrets.AZURE_CLIENT_ID }}
              tenant-id: ${{ secrets.AZURE_TENANT_ID }}
              allow-no-subscriptions: true
              enable-AzPSSession: true
        
        - name: Login into container registry
          uses: azure/docker-login@v2
          with:
            login-server: clientserver.azurecr.io
            username: ${{ secrets.ACR_USERNAME }}
            password: ${{ secrets.ACR_PASSWORD }}

        - name:  Push in Azure Container Registry
          run: |
            docker push clientserver.azurecr.io/client:latest 

        - name: Push docker-nginx
          run: |
            docker push clientserver.azurecr.io/nginx:latest

        - name: Push docker-server
          run: |
            docker push clientserver.azurecr.io/server:latest

        - name: Copy compose file to VM
          uses: appleboy/scp-action@v0.1.7
          with:
            host: ${{ secrets.VM_IP }} #4.180.241.77
            username: ${{ secrets.VM_USERNAME }} #
            key: ${{ secrets.VM_SSH_KEY }} 
            port: 22
            source: docker-compose.yml
            target: /home/user/app/

        - name: Deploy on VM
          uses: appleboy/ssh-action@v1.0.0
          with:
            host: ${{ secrets.VM_IP }}
            username: ${{ secrets.VM_USERNAME }}
            key: ${{ secrets.VM_SSH_KEY }}
            port: 22
            script: |
              cd /home/azureuser/app
              docker login clientserver.azurecr.io -u ${{ secrets.ACR_USERNAME }} -p ${{ secrets.ACR_PASSWORD }}  # Авторизация в ACR
              docker-compose down
              docker-compose pull
              docker-compose up -d